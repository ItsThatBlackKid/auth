{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Card, CardActions, CardContent, CardHeader, CircularProgress, Link as MuiLink, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Icon from \"@material-ui/core/Icon\";\nconst useStyles = makeStyles(theme => ({\n  textWidth: {\n    '& .MuiFormControl-root': {\n      width: \"100%\"\n    }\n  },\n  cardTitle: {\n    textAlign: \"center\"\n  }\n}));\nconst VERIFY = gql`\n    {\n        verify\n    }\n`;\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n  const classes = useStyles(); // setting the states\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        verified = _useState6[0],\n        setVerified = _useState6[1];\n\n  const query = useQueryParam();\n  const redirect = query.get('redirect') || '/';\n  const history = useHistory();\n\n  const _useQuery = useQuery(VERIFY, {\n    onCompleted(verified) {\n      setVerified(verified);\n      window.location.assign(redirect);\n    }\n\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useMutation = useMutation(LOGIN, {\n    onCompleted(result) {\n      setVerified(true);\n      window.location.assign(redirect);\n    },\n\n    onError(error) {\n      setVerified(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        login = _useMutation2[0];\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, loading ? React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }) : React.createElement(Grid, {\n    container: true // direction={\"row\"}\n    ,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.textWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      login({\n        variables: {\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    container: true // spacing={4}\n    ,\n    style: {\n      background: \"#FF7D33\",\n      height: \"100%\",\n      width: \"100%\",\n      padding: 16\n    },\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Welcome\"), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Sign in to access\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"or\")), React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Sign up\")))), React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    justify: \"center\" // alignItems={\"center\"}\n    ,\n    container: true,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      padding: 16\n    },\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(TextField, {\n    label: \"Email address\",\n    value: email,\n    type: \"email\",\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Password\",\n    value: password,\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    direction: \"row\",\n    container: true,\n    justify: \"flex-end\",\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(MuiLink, {\n    to: \"/forgotPassword\",\n    component: Link,\n    underline: \"none\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Forgot password?\"))), React.createElement(CardActions, {\n    style: {\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    endIcon: React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"send\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Sign in\"))))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js"],"names":["React","Fragment","useState","useMutation","useQuery","Link","useHistory","useLocation","gql","Grid","Button","Card","CardActions","CardContent","CardHeader","CircularProgress","MuiLink","TextField","Typography","makeStyles","CardMedia","Icon","useStyles","theme","textWidth","width","cardTitle","textAlign","VERIFY","LOGIN","useQueryParam","URLSearchParams","search","Login","classes","email","setEmail","password","setPassword","verified","setVerified","query","redirect","get","history","onCompleted","window","location","assign","loading","error","data","result","onError","login","e","preventDefault","variables","catch","console","log","background","height","padding","target","value","marginTop","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,qBAApC;AACA,SAAQC,IAAR,EAAcC,UAAd,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,UALJ,EAMIC,gBANJ,EAOIV,IAAI,IAAIW,OAPZ,EAQIC,SARJ,EASIC,UATJ,QAUO,mBAVP;AAWA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AAGnCC,EAAAA,SAAS,EAAE;AACP,8BAA0B;AACtBC,MAAAA,KAAK,EAAE;AADe;AADnB,GAHwB;AASnCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AATwB,CAAL,CAAN,CAA5B;AAeA,MAAMC,MAAM,GAAGpB,GAAI;;;;CAAnB;AAMA,MAAMqB,KAAK,GAAGrB,GAAI;;;;CAAlB;;AAMA,MAAMsB,aAAa,GAAG,MAAM;AACxB,SAAO,IAAIC,eAAJ,CAAoBxB,WAAW,GAAGyB,MAAlC,CAAP;AACH,CAFD;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB,CADgB,CAEhB;;AAFgB,oBAGUpB,QAAQ,CAAC,EAAD,CAHlB;AAAA;AAAA,QAGTiC,KAHS;AAAA,QAGFC,QAHE;;AAAA,qBAIgBlC,QAAQ,CAAC,EAAD,CAJxB;AAAA;AAAA,QAITmC,QAJS;AAAA,QAICC,WAJD;;AAAA,qBAKgBpC,QAAQ,CAAC,IAAD,CALxB;AAAA;AAAA,QAKTqC,QALS;AAAA,QAKCC,WALD;;AAOhB,QAAMC,KAAK,GAAGX,aAAa,EAA3B;AACA,QAAMY,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAU,UAAV,KAAyB,GAA1C;AACA,QAAMC,OAAO,GAAGtC,UAAU,EAA1B;;AATgB,oBAWeF,QAAQ,CAACwB,MAAD,EAAS;AAC5CiB,IAAAA,WAAW,CAACN,QAAD,EAAW;AAClBC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBN,QAAvB;AACH;;AAJ2C,GAAT,CAXvB;AAAA,QAWTO,OAXS,aAWTA,OAXS;AAAA,QAWAC,KAXA,aAWAA,KAXA;AAAA,QAWOC,IAXP,aAWOA,IAXP;;AAAA,uBAmBAhD,WAAW,CAAC0B,KAAD,EAAQ;AAC/BgB,IAAAA,WAAW,CAACO,MAAD,EAAS;AAChBZ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBN,QAAvB;AACH,KAJ8B;;AAM/BW,IAAAA,OAAO,CAACH,KAAD,EAAQ;AAEXV,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAT8B,GAAR,CAnBX;AAAA;AAAA,QAmBTc,KAnBS;;AAgChB,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,GAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACJ,oBAAC,IAAD;AACI,IAAA,SAAS,MADb,CAEI;AAFJ;AAGI,IAAA,OAAO,EAAE,QAHb;AAII,IAAA,UAAU,EAAE,QAJhB;AAKI,IAAA,SAAS,EAAEf,OAAO,CAACV,SALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQQ;AACI,IAAA,QAAQ,EAAE+B,CAAC,IAAI;AACXA,MAAAA,CAAC,CAACC,cAAF;AAEAF,MAAAA,KAAK,CAAC;AACFG,QAAAA,SAAS,EAAE;AACPtB,UAAAA,KADO;AAEPE,UAAAA;AAFO;AADT,OAAD,CAAL,CAKGqB,KALH,CAKSH,CAAC,IAAI;AACVI,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACH,OAPD;AAQH,KAZL;AAaI,IAAA,EAAE,EAAE,WAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AACM,IAAA,SAAS,EAAE,QADjB;AAEM,IAAA,OAAO,EAAE,QAFf;AAGM,IAAA,UAAU,EAAE,QAHlB;AAIM,IAAA,SAAS,MAJf,CAKM;AALN;AAMM,IAAA,KAAK,EAAE;AAACM,MAAAA,UAAU,EAAE,SAAb;AAAwBC,MAAAA,MAAM,EAAE,MAAhC;AAAwCrC,MAAAA,KAAK,EAAE,MAA/C;AAAuDsC,MAAAA,OAAO,EAAE;AAAhE,KANb;AAOM,IAAA,EAAE,EAAE,CAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,KAAK,EAAE,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPJ,EAUI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ,CADJ,EAgBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,KAAK,EAAE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAhBJ,CARJ,CADJ,EAiCI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AACM,IAAA,SAAS,EAAE,QADjB;AAEM,IAAA,OAAO,EAAE,QAFf,CAGI;AAHJ;AAIM,IAAA,SAAS,MAJf;AAKM,IAAA,KAAK,EAAE;AAACtC,MAAAA,KAAK,EAAE,MAAR;AAAgBqC,MAAAA,MAAM,EAAE,MAAxB;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KALb;AAMM,IAAA,EAAE,EAAE,CANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAII,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,eADX;AAEI,IAAA,KAAK,EAAE5B,KAFX;AAGI,IAAA,IAAI,EAAE,OAHV;AAII,IAAA,QAAQ,EAAGoB,CAAD,IAAO;AACbnB,MAAAA,QAAQ,CAACmB,CAAC,CAACS,MAAF,CAASC,KAAV,CAAR;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,UADX;AAEI,IAAA,KAAK,EAAE5B,QAFX;AAGI,IAAA,IAAI,EAAE,UAHV;AAII,IAAA,QAAQ,EAAGkB,CAAD,IAAO;AACbjB,MAAAA,WAAW,CAACiB,CAAC,CAACS,MAAF,CAASC,KAAV,CAAX;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AACM,IAAA,SAAS,EAAE,KADjB;AAEM,IAAA,SAAS,MAFf;AAGM,IAAA,OAAO,EAAE,UAHf;AAIM,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,OAAD;AACI,IAAA,EAAE,EAAE,iBADR;AAEI,IAAA,SAAS,EAAE7D,IAFf;AAGI,IAAA,SAAS,EAAE,MAHf;AAII,IAAA,KAAK,EAAE,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CArBJ,CAPJ,EA+CI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAC8D,MAAAA,cAAc,EAAE;AAAjB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAC,WAAhC;AAA4C,IAAA,IAAI,EAAE,QAAlD;AACQ,IAAA,OAAO,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CA/CJ,CAjCJ,CADJ,CAfJ,CARR,CAFR,CADJ;AAyHH,CAzJD;;AA2JA,eAAelC,KAAf","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/react-hooks\";\nimport {Link, useHistory, useLocation} from 'react-router-dom'\nimport gql from \"graphql-tag\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    CircularProgress,\n    Link as MuiLink,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst useStyles = makeStyles(theme => ({\n\n\n    textWidth: {\n        '& .MuiFormControl-root': {\n            width: \"100%\"\n        }\n    },\n\n    cardTitle: {\n        textAlign: \"center\"\n    },\n\n}));\n\nconst VERIFY = gql`\n    {\n        verify\n    }\n`;\n\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n    const classes = useStyles();\n    // setting the states\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [verified, setVerified] = useState(null);\n\n    const query = useQueryParam();\n    const redirect = query.get('redirect') || '/';\n    const history = useHistory();\n\n    const {loading, error, data} = useQuery(VERIFY, {\n        onCompleted(verified) {\n            setVerified(verified);\n            window.location.assign(redirect);\n        }\n    });\n\n\n    const [login] = useMutation(LOGIN, {\n        onCompleted(result) {\n            setVerified(true);\n            window.location.assign(redirect);\n        },\n\n        onError(error) {\n\n            setVerified(false)\n        }\n    });\n\n\n    return (\n        <Fragment>\n            {loading ? <CircularProgress/> :\n                <Grid\n                    container\n                    // direction={\"row\"}\n                    justify={\"center\"}\n                    alignItems={\"center\"}\n                    className={classes.textWidth}\n                >\n                    {/*<Grid  item xs={6}>*/}\n                        <form\n                            onSubmit={e => {\n                                e.preventDefault();\n\n                                login({\n                                    variables: {\n                                        email,\n                                        password\n                                    }\n                                }).catch(e => {\n                                    console.log(e);\n                                })\n                            }}\n                            id={\"cred-form\"}\n                        >\n                            <Card>\n                                <Grid container direction={\"row\"}>\n                                    <Grid item\n                                          direction={\"column\"}\n                                          justify={\"center\"}\n                                          alignItems={\"center\"}\n                                          container\n                                          // spacing={4}\n                                          style={{background: \"#FF7D33\", height: \"100%\", width: \"100%\", padding: 16}}\n                                          xs={6}>\n                                        <CardMedia>\n                                            <Grid\n                                                item\n                                                align={\"center\"}\n                                            >\n                                                <Typography variant={\"h4\"}>\n                                                    Welcome\n                                                </Typography>\n                                                <Typography variant={\"body1\"}>\n                                                    Sign in to access\n                                                </Typography>\n                                                <Typography>\n                                                    or\n                                                </Typography>\n\n                                            </Grid>\n                                            <Grid item align={\"center\"}>\n                                                <Button variant={\"contained\"}>\n                                                    Sign up\n                                                </Button>\n                                            </Grid>\n\n                                        </CardMedia>\n                                    </Grid>\n                                    <Grid item\n                                          direction={\"column\"}\n                                          justify={\"center\"}\n                                        // alignItems={\"center\"}\n                                          container\n                                          style={{width: \"100%\", height: \"100%\", padding: 16}}\n                                          xs={6}>\n                                        <CardContent>\n                                            <Typography variant={\"h5\"}>\n                                                Sign in\n                                            </Typography>\n                                            <TextField\n                                                label={\"Email address\"}\n                                                value={email}\n                                                type={\"email\"}\n                                                onChange={(e) => {\n                                                    setEmail(e.target.value)\n                                                }}\n                                            />\n\n                                            <TextField\n                                                label={\"Password\"}\n                                                value={password}\n                                                type={\"password\"}\n                                                onChange={(e) => {\n                                                    setPassword(e.target.value)\n                                                }}\n                                            />\n                                            <Grid item\n                                                  direction={\"row\"}\n                                                  container\n                                                  justify={\"flex-end\"}\n                                                  style={{marginTop: 16}}\n                                            >\n\n                                                <MuiLink\n                                                    to={\"/forgotPassword\"}\n                                                    component={Link}\n                                                    underline={\"none\"}\n                                                    color={\"secondary\"}\n                                                >\n                                                    Forgot password?\n                                                </MuiLink>\n\n                                            </Grid>\n\n                                        </CardContent>\n                                        <CardActions style={{justifyContent: \"flex-end\"}}>\n                                            <Button color=\"primary\" variant=\"contained\" type={\"submit\"}\n                                                    endIcon={<Icon>send</Icon>}>Sign in</Button>\n                                        </CardActions>\n                                    </Grid>\n\n                                </Grid>\n                            </Card>\n                        </form>\n                    {/*</Grid>*/}\n                </Grid>\n            }\n        </Fragment>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}