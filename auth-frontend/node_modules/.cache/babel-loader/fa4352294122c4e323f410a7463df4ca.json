{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { Button, Card, Row, Col, TextInput } from 'react-materialize';\nexport default function SignUp() {\n  // setting the states\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password2 = _useState12[0],\n        setPassword2 = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        validPass = _useState14[0],\n        setValidPass = _useState14[1];\n\n  const passwordsMatch = toMatch => {\n    setValidPass(toMatch === password);\n    setPassword2(toMatch);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: \"Sign up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 6,\n    label: \"First Name\",\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    validate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    s: 6,\n    label: \"Last Name\",\n    value: lastName,\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    validate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Username\",\n    value: username,\n    onChange: e => {\n      setUsername(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Email\",\n    email: true,\n    error: \"Invalid email\",\n    validate: true,\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 6,\n    label: \"Password\",\n    password: true,\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    s: 6,\n    label: \"Confirm Password\",\n    password: true,\n    inputClassName: validPass ? \"\" : \"invalid\",\n    error: \"Passwords do not match\",\n    value: password2,\n    onChange: e => {\n      passwordsMatch(e.target.value);\n    },\n    validate: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js"],"names":["React","Fragment","useState","Button","Card","Row","Col","TextInput","SignUp","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","validPass","setValidPass","passwordsMatch","toMatch","e","target","value"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {Button, Card, Row, Col, TextInput} from 'react-materialize'\n\nexport default function SignUp() {\n    // setting the states\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [validPass, setValidPass] = useState(true);\n\n    const passwordsMatch = (toMatch) => {\n        setValidPass(toMatch === password);\n\n        setPassword2(toMatch);\n    };\n\n    return (\n        <div className={\"container valign-wrapper\"}>\n                    <Card title={\"Sign up\"}>\n                        <form id={\"cred-form\"}>\n                            <Row>\n                                <TextInput s={6} label={\"First Name\"} value={firstName} onChange={(e) => {\n                                    setFirstName(e.target.value);\n                                }} validate/>\n                                <TextInput s={6} label={\"Last Name\"} value={lastName} onChange={(e) => {\n                                    setLastName(e.target.value);\n                                }} validate/>\n                            </Row>\n                            <Row>\n                                <TextInput s={12} label={\"Username\"} value={username} onChange={(e) => {\n                                    setUsername(e.target.value);\n                                }} required/>\n                            </Row>\n                            <Row>\n                                <TextInput s={12} label={\"Email\"} email error={\"Invalid email\"} validate value={email}\n                                           onChange={(e) => {\n                                               setEmail(e.target.value);\n                                           }} required/>\n                            </Row>\n                            <Row>\n                                <TextInput s={6} label={\"Password\"} password value={password} onChange={(e) => {\n                                    setPassword(e.target.value);\n                                }} required/>\n                                <TextInput s={6} label={\"Confirm Password\"} password\n                                           inputClassName={validPass ? \"\" : \"invalid\"}\n                                           error={\"Passwords do not match\"} value={password2} onChange={(e) => {\n                                    passwordsMatch(e.target.value);\n                                }} validate required/>\n\n                            </Row>\n                        </form>\n                    </Card>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}