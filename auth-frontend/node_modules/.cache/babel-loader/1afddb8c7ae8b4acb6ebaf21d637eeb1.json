{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Button, Card, Row, Col, TextInput, Preloader, Collection, CollectionItem } from 'react-materialize';\nconst CHECK_USER = gql`\n    {\n        verify {\n            email\n            first_name\n            last_name\n        }\n    }\n`;\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n  // setting the states\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1];\n\n  const query = useQueryParam();\n  const history = useHistory();\n\n  const _useQuery = useQuery(CHECK_USER),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useMutation = useMutation(LOGIN, {\n    onCompleted(result) {\n      setSuccess(true);\n      const redirect = query.get('redirect');\n      window.location.assign(redirect);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        login = _useMutation2[0];\n\n  const title = React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    className: \"white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Login\")));\n\n  if (loading) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Preloader, {\n      active: true,\n      size: \"medium\",\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n  const user = !error && data.verify;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, user ? React.createElement(Collection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(CollectionItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, user.first_name, \" \", user.last_name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, user.email))) : React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      login({\n        variables: {\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Email\",\n    email: true,\n    error: \"Invalid email\",\n    validate: true,\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Password\",\n    password: true,\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), success !== null && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: success ? \"green-text darken-3\" : \"red-text darken-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, success ? \"Login success! Redirecting...\" : \"Unable to login with provided credentials\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Submit\"))))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js"],"names":["React","Fragment","useState","useEffect","useMutation","useQuery","useHistory","useLocation","gql","Button","Card","Row","Col","TextInput","Preloader","Collection","CollectionItem","CHECK_USER","LOGIN","useQueryParam","URLSearchParams","search","Login","email","setEmail","password","setPassword","success","setSuccess","query","history","loading","error","data","onCompleted","result","redirect","get","window","location","assign","onError","login","title","user","verify","first_name","last_name","e","preventDefault","variables","catch","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,qBAApC;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,kBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,SAAhC,EAA2CC,SAA3C,EAAsDC,UAAtD,EAAkEC,cAAlE,QAAuF,mBAAvF;AAEA,MAAMC,UAAU,GAAGT,GAAI;;;;;;;;CAAvB;AAUA,MAAMU,KAAK,GAAGV,GAAI;;;;CAAlB;;AAMA,MAAMW,aAAa,GAAG,MAAM;AACxB,SAAO,IAAIC,eAAJ,CAAoBb,WAAW,GAAGc,MAAlC,CAAP;AACH,CAFD;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAChB;AADgB,oBAEUpB,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,QAETqB,KAFS;AAAA,QAEFC,QAFE;;AAAA,qBAGgBtB,QAAQ,CAAC,EAAD,CAHxB;AAAA;AAAA,QAGTuB,QAHS;AAAA,QAGCC,WAHD;;AAAA,qBAIcxB,QAAQ,CAAC,IAAD,CAJtB;AAAA;AAAA,QAITyB,OAJS;AAAA,QAIAC,UAJA;;AAMhB,QAAMC,KAAK,GAAGV,aAAa,EAA3B;AACA,QAAMW,OAAO,GAAGxB,UAAU,EAA1B;;AAPgB,oBASeD,QAAQ,CAACY,UAAD,CATvB;AAAA,QASTc,OATS,aASTA,OATS;AAAA,QASAC,KATA,aASAA,KATA;AAAA,QASOC,IATP,aASOA,IATP;;AAAA,uBAYA7B,WAAW,CAACc,KAAD,EAAQ;AAC/BgB,IAAAA,WAAW,CAACC,MAAD,EAAS;AAChBP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMQ,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAU,UAAV,CAAjB;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBJ,QAAvB;AACH,KAL8B;;AAO/BK,IAAAA,OAAO,CAACT,KAAD,EAAQ;AAEXJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAV8B,GAAR,CAZX;AAAA;AAAA,QAYTc,KAZS;;AAyBhB,QAAMC,KAAK,GAAG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAY,IAAA,SAAS,EAAE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADM,CAAd;;AAMA,MAAIZ,OAAJ,EAAa;AACT,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,MAAM,MAAjB;AAAkB,MAAA,IAAI,EAAE,QAAxB;AAAkC,MAAA,KAAK,EAAE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAKD,QAAMa,IAAI,GAAG,CAACZ,KAAD,IAAUC,IAAI,CAACY,MAA5B;AAGA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,GACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,IAAI,CAACE,UAAhC,OAA6CF,IAAI,CAACG,SAAlD,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACrB,KADV,CAFJ,CADJ,CADA,GASA;AAAM,IAAA,QAAQ,EAAEyB,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AAEAP,MAAAA,KAAK,CAAC;AACFQ,QAAAA,SAAS,EAAE;AACP3B,UAAAA,KADO;AAEPE,UAAAA;AAFO;AADT,OAAD,CAAL,CAKG0B,KALH,CAKSH,CAAC,IAAI;AACVI,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACH,OAPD;AASH,KAZD;AAYG,IAAA,EAAE,EAAE,WAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,EAAd;AAAkB,IAAA,KAAK,EAAE,OAAzB;AAAkC,IAAA,KAAK,MAAvC;AAAwC,IAAA,KAAK,EAAE,eAA/C;AAAgE,IAAA,QAAQ,MAAxE;AACW,IAAA,KAAK,EAAEzB,KADlB;AAEW,IAAA,QAAQ,EAAGyB,CAAD,IAAO;AACbxB,MAAAA,QAAQ,CAACwB,CAAC,CAACM,MAAF,CAASC,KAAV,CAAR;AACH,KAJZ;AAIc,IAAA,QAAQ,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,EAoBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,EAAd;AAAkB,IAAA,KAAK,EAAE,UAAzB;AAAqC,IAAA,QAAQ,MAA7C;AAA8C,IAAA,KAAK,EAAE9B,QAArD;AACW,IAAA,QAAQ,EAAGuB,CAAD,IAAO;AACbtB,MAAAA,WAAW,CAACsB,CAAC,CAACM,MAAF,CAASC,KAAV,CAAX;AACH,KAHZ;AAGc,IAAA,QAAQ,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApBJ,EA2BQ5B,OAAO,KAAK,IAAZ,IACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAEA,OAAO,GAAG,qBAAH,GAA2B,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,GAAG,+BAAH,GAAqC,2CADjD,CADJ,CA5BR,EAkCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAlCJ,CAXZ,CADJ,CADJ,CADJ,CADJ,CADJ;AA6DH,CA3GD;;AA6GA,eAAeL,KAAf","sourcesContent":["import React, {Fragment, useState, useEffect} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/react-hooks\";\nimport {useHistory, useLocation} from 'react-router-dom'\nimport gql from \"graphql-tag\";\nimport {Button, Card, Row, Col, TextInput, Preloader, Collection, CollectionItem} from 'react-materialize'\n\nconst CHECK_USER = gql`\n    {\n        verify {\n            email\n            first_name\n            last_name\n        }\n    }\n`;\n\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n    // setting the states\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [success, setSuccess] = useState(null);\n\n    const query = useQueryParam();\n    const history = useHistory();\n\n    const {loading, error, data} = useQuery(CHECK_USER);\n\n\n    const [login] = useMutation(LOGIN, {\n        onCompleted(result) {\n            setSuccess(true);\n            const redirect = query.get('redirect');\n            window.location.assign(redirect);\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const title = <Row>\n            <Col s={12} className={\"white-text\"}>\n                <h2>Login</h2>\n            </Col>\n        </Row>;\n\n    if (loading) {\n        return (\n            <Fragment>\n                <title/>\n                <Preloader active size={\"medium\"} color={\"white\"}/>\n            </Fragment>\n        )\n    }\n    \n\n\n\n    const user = !error && data.verify;\n\n\n    return (\n        <Fragment>\n            <div className={\"valign-wrapper\"}>\n                <Row>\n                    <Col s={12}>\n                        <Card>\n                            {\n                                user ?\n                                    <Collection>\n                                        <CollectionItem>\n                                            <span className={\"title\"}>{user.first_name} {user.last_name}</span>\n                                            <p>\n                                                {user.email}\n                                            </p>\n                                        </CollectionItem>\n                                    </Collection> :\n                                    <form onSubmit={e => {\n                                        e.preventDefault();\n\n                                        login({\n                                            variables: {\n                                                email,\n                                                password\n                                            }\n                                        }).catch(e => {\n                                            console.log(e);\n                                        })\n\n                                    }} id={\"cred-form\"}>\n                                        <Row>\n                                            <TextInput s={12} label={\"Email\"} email error={\"Invalid email\"} validate\n                                                       value={email}\n                                                       onChange={(e) => {\n                                                           setEmail(e.target.value);\n                                                       }} required/>\n                                        </Row>\n                                        <Row>\n                                            <TextInput s={12} label={\"Password\"} password value={password}\n                                                       onChange={(e) => {\n                                                           setPassword(e.target.value);\n                                                       }} required/>\n                                        </Row>\n                                        {\n                                            success !== null &&\n                                            <Row>\n                                                <p className={success ? \"green-text darken-3\" : \"red-text darken-red\"}>\n                                                    {success ? \"Login success! Redirecting...\" : \"Unable to login with provided credentials\"}\n                                                </p>\n                                            </Row>\n                                        }\n                                        <Row>\n                                            <Button type={\"submit\"}>Submit</Button>\n                                        </Row>\n                                    </form>\n                            }\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        </Fragment>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}