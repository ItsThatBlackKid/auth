{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Button, Card, Row, Col, TextInput } from 'react-materialize';\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\nconst CHECK_USER = gql`    \n    query verify {\n        verify {\n            _id\n            email\n            first_name\n            last_name\n        }\n    }\n`;\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n  // setting the states\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        userData = _useState8[0],\n        setUserData = _useState8[1];\n\n  const query = useQuery();\n  const history = useHistory();\n\n  const _useMutation = useMutation(LOGIN, {\n    onCompleted(result) {\n      setSuccess(true);\n      const redirect = query.get('redirect');\n      window.location.assign(redirect);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        login = _useMutation2[0];\n\n  const _useQuery = useQuery(CHECK_USER, {\n    onCompleted(result) {}\n\n  }),\n        _useQuery2 = _slicedToArray(_useQuery, 1),\n        checkUser = _useQuery2[0];\n\n  useEffect(() => {});\n  return React.createElement(\"div\", {\n    className: \"container center-align\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    className: \"white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Sign up\"))), React.createElement(\"div\", {\n    className: \"valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      login({\n        variables: {\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Email\",\n    email: true,\n    error: \"Invalid email\",\n    validate: true,\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Password\",\n    password: true,\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), success !== null && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: success ? \"green-text darken-3\" : \"red-text darken-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, success ? \"Login success! Redirecting...\" : \"Unable to login with provided credentials\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Submit\"))))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js"],"names":["React","Fragment","useState","useEffect","useMutation","useHistory","useLocation","gql","Button","Card","Row","Col","TextInput","LOGIN","CHECK_USER","useQuery","URLSearchParams","search","Login","email","setEmail","password","setPassword","success","setSuccess","userData","setUserData","query","history","onCompleted","result","redirect","get","window","location","assign","onError","error","login","checkUser","e","preventDefault","variables","catch","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {useHistory, useLocation} from 'react-router-dom'\nimport gql from \"graphql-tag\";\nimport {Button, Card, Row, Col, TextInput} from 'react-materialize'\n\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst CHECK_USER = gql`    \n    query verify {\n        verify {\n            _id\n            email\n            first_name\n            last_name\n        }\n    }\n`;\n\nconst useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n    // setting the states\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [success, setSuccess] = useState(null);\n    const [userData, setUserData] = useState({});\n\n    const query = useQuery();\n    const history = useHistory();\n\n    const [login] = useMutation(LOGIN, {\n        onCompleted(result) {\n            setSuccess(true);\n            const redirect = query.get('redirect');\n            window.location.assign(redirect);\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const [checkUser] = useQuery(CHECK_USER, {\n        onCompleted(result) {\n\n        }\n    })\n\n    useEffect(() => {\n\n    })\n\n    return (\n        <div className={\"container center-align\"}>\n            <Row>\n                <Col s={12} className={\"white-text\"}>\n                    <h2>Sign up</h2>\n                </Col>\n            </Row>\n            <div className={\"valign-wrapper\"}>\n                <Row>\n                    <Col s={12}>\n                        <Card>\n                            <form onSubmit={e => {\n                                e.preventDefault();\n\n                                login({\n                                    variables: {\n                                        email,\n                                        password\n                                    }\n                                }).catch(e => {\n                                    console.log(e);\n                                })\n\n                            }} id={\"cred-form\"}>\n                                <Row>\n                                    <TextInput s={12} label={\"Email\"} email error={\"Invalid email\"} validate\n                                               value={email}\n                                               onChange={(e) => {\n                                                   setEmail(e.target.value);\n                                               }} required/>\n                                </Row>\n                                <Row>\n                                    <TextInput s={12} label={\"Password\"} password value={password} onChange={(e) => {\n                                        setPassword(e.target.value);\n                                    }} required/>\n                                </Row>\n                                {\n                                    success !== null &&\n                                    <Row>\n                                        <p className={success ? \"green-text darken-3\" : \"red-text darken-red\"}>\n                                            {success ? \"Login success! Redirecting...\" : \"Unable to login with provided credentials\"}\n                                        </p>\n                                    </Row>\n                                }\n                                <Row>\n                                    <Button type={\"submit\"}>Submit</Button>\n                                </Row>\n                            </form>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}