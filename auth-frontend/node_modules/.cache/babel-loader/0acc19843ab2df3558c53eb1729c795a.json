{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { Button, Card, CardHeader, FormGroup, Grid, TextField } from '@material-ui/core';\nimport Typography from \"@material-ui/core/Typography\";\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\nexport default function SignUp() {\n  document.title = \"Auth - Sign up\"; // setting the states\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password2 = _useState12[0],\n        setPassword2 = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        validPass = _useState14[0],\n        setValidPass = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        success = _useState16[0],\n        setSuccess = _useState16[1];\n\n  const _useMutation = useMutation(SIGNUP, {\n    onCompleted(result) {\n      setSuccess(true);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        signup = _useMutation2[0];\n\n  const passwordsMatch = toMatch => {\n    setValidPass(toMatch === password);\n    setPassword2(toMatch);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: 4,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!validPass) {\n        return false;\n      }\n\n      signup({\n        variables: {\n          first_name: firstName,\n          last_name: lastName,\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })))))))));\n}","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js"],"names":["React","Fragment","useState","useMutation","gql","Button","Card","CardHeader","FormGroup","Grid","TextField","Typography","SIGNUP","SignUp","document","title","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","validPass","setValidPass","success","setSuccess","onCompleted","result","onError","error","signup","passwordsMatch","toMatch","e","preventDefault","variables","first_name","last_name","catch","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {Button, Card, CardHeader, FormGroup, Grid, TextField} from '@material-ui/core'\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\n\nexport default function SignUp() {\n    document.title = \"Auth - Sign up\";\n    // setting the states\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [validPass, setValidPass] = useState(true);\n    const [success, setSuccess] = useState(null);\n\n    const [signup] = useMutation(SIGNUP, {\n        onCompleted(result) {\n            setSuccess(true)\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const passwordsMatch = (toMatch) => {\n        setValidPass(toMatch === password);\n\n        setPassword2(toMatch);\n    };\n\n    return (\n        <Fragment>\n            <Grid\n                container={4}\n                direction={\"row\"}\n                justify={\"center\"}\n                alignItems={\"center\"}\n            >\n                <Grid xs={6}>\n                    <Card>\n                        <CardHeader title={\"Signup\"}>\n\n                        </CardHeader>\n                        <form onSubmit={e => {\n                            e.preventDefault();\n\n                            if (!validPass) {\n                                return false;\n                            }\n\n                            signup({\n                                variables: {\n                                    first_name: firstName,\n                                    last_name: lastName,\n                                    email,\n                                    password\n                                }\n                            }).catch(e => {\n                                console.log(e);\n                            })\n                        }} id={\"cred-form\"}>\n                            <Grid container>\n                                <Grid>\n                                    <FormGroup>\n                                        <TextField value={firstName} onChange={(e) => {setFirstName(e.target.value)} }  />\n                                    </FormGroup>\n                                </Grid>\n\n\n                            </Grid>\n                        </form>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}