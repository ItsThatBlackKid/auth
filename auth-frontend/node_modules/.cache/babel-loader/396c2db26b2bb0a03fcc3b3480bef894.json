{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"../styles/sass/auth.sass\";\nimport { Button, Card, CardActions, CardContent, CardHeader, FormGroup, Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport PublishIcon from '@material-ui/icons/Publish';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\nconst useStyles = makeStyles(theme => ({\n  textWidth: {\n    '& .MuiFormControl-root': {\n      width: \"100%\"\n    }\n  },\n  cardTitle: {\n    textAlign: \"center\"\n  }\n}));\nexport default function SignUp() {\n  document.title = \"Auth - Sign up\";\n  const classes = useStyles(); // setting the states\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password2 = _useState12[0],\n        setPassword2 = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        validPass = _useState14[0],\n        setValidPass = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        success = _useState16[0],\n        setSuccess = _useState16[1];\n\n  const _useMutation = useMutation(SIGNUP, {\n    onCompleted(result) {\n      setSuccess(true);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        signup = _useMutation2[0];\n\n  const passwordsMatch = toMatch => {\n    setValidPass(toMatch === password);\n    setPassword2(toMatch);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    justify: \"center\",\n    container: true,\n    align: \"center\",\n    xs: 6,\n    md: 6,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!validPass) {\n        return false;\n      }\n\n      signup({\n        variables: {\n          first_name: firstName,\n          last_name: lastName,\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Sign up\"), React.createElement(TextField, {\n    label: \"First name\",\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Last name\",\n    value: lastName,\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Email address\",\n    value: email,\n    type: \"email\",\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Password\",\n    value: password,\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Confirm password\",\n    value: password2,\n    type: \"password\",\n    onChange: e => {\n      setPassword2(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    endIcon: React.createElement(PublishIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Submit\"))))), React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    justify: \"center\",\n    container: true,\n    align: \"center\",\n    xs: 6,\n    md: 6,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"welcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Welcome\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Sign up for access\")), React.createElement(Grid, {\n    item: true,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Or\")))))));\n}","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js"],"names":["React","Fragment","useState","useMutation","gql","Button","Card","CardActions","CardContent","CardHeader","FormGroup","Grid","TextField","makeStyles","Typography","FormControl","PublishIcon","CardMedia","SIGNUP","useStyles","theme","textWidth","width","cardTitle","textAlign","SignUp","document","title","classes","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","validPass","setValidPass","success","setSuccess","onCompleted","result","onError","error","signup","passwordsMatch","toMatch","e","preventDefault","variables","first_name","last_name","catch","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport \"../styles/sass/auth.sass\"\nimport {Button, Card, CardActions, CardContent, CardHeader, FormGroup, Grid, TextField} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport PublishIcon from '@material-ui/icons/Publish';\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\n\nconst useStyles = makeStyles(theme => ({\n\n\n    textWidth: {\n        '& .MuiFormControl-root': {\n            width: \"100%\"\n        }\n    },\n\n    cardTitle: {\n        textAlign: \"center\"\n    },\n\n}));\n\nexport default function SignUp() {\n    document.title = \"Auth - Sign up\";\n    const classes = useStyles();\n    // setting the states\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [validPass, setValidPass] = useState(true);\n    const [success, setSuccess] = useState(null);\n\n    const [signup] = useMutation(SIGNUP, {\n        onCompleted(result) {\n            setSuccess(true)\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const passwordsMatch = (toMatch) => {\n        setValidPass(toMatch === password);\n\n        setPassword2(toMatch);\n    };\n\n    return (\n        <Fragment>\n            <Grid\n                item\n                direction={\"column\"}\n                justify={\"center\"}\n                container\n                align={\"center\"}\n                xs={6}\n                md={6}\n                xl={6}\n            >\n                <form\n                    onSubmit={e => {\n                        e.preventDefault();\n\n                        if (!validPass) {\n                            return false;\n                        }\n\n                        signup({\n                            variables: {\n                                first_name: firstName,\n                                last_name: lastName,\n                                email,\n                                password\n                            }\n                        }).catch(e => {\n                            console.log(e);\n                        })\n                    }}\n                    id={\"cred-form\"}\n                >\n                    <Card>\n\n                        <CardContent>\n                            <Typography variant={\"h4\"} className={classes.cardTitle}>Sign up</Typography>\n\n                            <TextField\n                                label={\"First name\"}\n                                value={firstName}\n                                onChange={(e) => {\n                                    setFirstName(e.target.value)\n                                }}\n                            />\n\n                            <TextField\n                                label={\"Last name\"}\n                                value={lastName}\n                                onChange={(e) => {\n                                    setLastName(e.target.value)\n                                }}\n                            />\n\n                            <TextField\n                                label={\"Email address\"}\n                                value={email}\n                                type={\"email\"}\n                                onChange={(e) => {\n                                    setEmail(e.target.value)\n                                }}\n                            />\n\n                            <TextField\n                                label={\"Password\"}\n                                value={password}\n                                type={\"password\"}\n                                onChange={(e) => {\n                                    setPassword(e.target.value)\n                                }}/>\n                            <TextField\n                                label={\"Confirm password\"}\n                                value={password2}\n                                type={\"password\"}\n                                onChange={(e) => {\n                                    setPassword2(e.target.value)\n                                }}\n                            />\n\n                        </CardContent>\n                        <CardActions>\n                            <Button color=\"primary\" variant=\"contained\"\n                                    endIcon={<PublishIcon/>}>Submit</Button>\n                        </CardActions>\n                    </Card>\n                </form>\n\n\n            </Grid>\n            <Grid item\n                  direction={\"column\"}\n                  justify={\"center\"}\n                  container\n                  align={\"center\"}\n                  xs={6}\n                  md={6}\n                  xl={6}\n            >\n                <Card\n                    className={\"welcome\"}\n                >\n                    <CardContent>\n                        <Grid item container direction={\"column\"} justify={\"center\"}>\n                            <Grid item>\n                                <Typography variant=\"h4\">\n                                    Welcome\n                                </Typography>\n                            </Grid>\n\n                            <Grid item>\n                                <Typography>\n                                    Sign up for access\n                                </Typography>\n                            </Grid>\n\n                            <Grid item align={\"center\"}>\n                                <Typography>\n                                    Or\n                                </Typography>\n                            </Grid>\n                        </Grid>\n\n                    </CardContent>\n                </Card>\n            </Grid>\n\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}