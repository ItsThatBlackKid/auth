{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { Button, Card, CardContent, CardHeader, FormGroup, Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\nconst useStyles = makeStyles({\n  carContent: {}\n});\nexport default function SignUp() {\n  document.title = \"Auth - Sign up\"; // setting the states\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password2 = _useState12[0],\n        setPassword2 = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        validPass = _useState14[0],\n        setValidPass = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        success = _useState16[0],\n        setSuccess = _useState16[1];\n\n  const _useMutation = useMutation(SIGNUP, {\n    onCompleted(result) {\n      setSuccess(true);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        signup = _useMutation2[0];\n\n  const passwordsMatch = toMatch => {\n    setValidPass(toMatch === password);\n    setPassword2(toMatch);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!validPass) {\n        return false;\n      }\n\n      signup({\n        variables: {\n          first_name: firstName,\n          last_name: lastName,\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"First Name\",\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Last Name\",\n    value: lastName,\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))))))))));\n}","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js"],"names":["React","Fragment","useState","useMutation","gql","Button","Card","CardContent","CardHeader","FormGroup","Grid","TextField","makeStyles","Typography","FormControl","SIGNUP","useStyles","carContent","SignUp","document","title","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","validPass","setValidPass","success","setSuccess","onCompleted","result","onError","error","signup","passwordsMatch","toMatch","e","preventDefault","variables","first_name","last_name","catch","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,IAA1D,EAAgEC,SAAhE,QAAgF,mBAAhF;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,MAAM,GAAGX,GAAI;;;;CAAnB;AAMA,MAAMY,SAAS,GAAGJ,UAAU,CAAC;AACzBK,EAAAA,UAAU,EAAE;AADa,CAAD,CAA5B;AAIA,eAAe,SAASC,MAAT,GAAkB;AAC7BC,EAAAA,QAAQ,CAACC,KAAT,GAAiB,gBAAjB,CAD6B,CAE7B;;AAF6B,oBAGKlB,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,QAGtBmB,SAHsB;AAAA,QAGXC,YAHW;;AAAA,qBAIGpB,QAAQ,CAAC,EAAD,CAJX;AAAA;AAAA,QAItBqB,QAJsB;AAAA,QAIZC,WAJY;;AAAA,qBAKGtB,QAAQ,CAAC,EAAD,CALX;AAAA;AAAA,QAKtBuB,QALsB;AAAA,QAKZC,WALY;;AAAA,qBAMHxB,QAAQ,CAAC,EAAD,CANL;AAAA;AAAA,QAMtByB,KANsB;AAAA,QAMfC,QANe;;AAAA,qBAOG1B,QAAQ,CAAC,EAAD,CAPX;AAAA;AAAA,QAOtB2B,QAPsB;AAAA,QAOZC,WAPY;;AAAA,sBAQK5B,QAAQ,CAAC,EAAD,CARb;AAAA;AAAA,QAQtB6B,SARsB;AAAA,QAQXC,YARW;;AAAA,sBASK9B,QAAQ,CAAC,IAAD,CATb;AAAA;AAAA,QAStB+B,SATsB;AAAA,QASXC,YATW;;AAAA,sBAUChC,QAAQ,CAAC,IAAD,CAVT;AAAA;AAAA,QAUtBiC,OAVsB;AAAA,QAUbC,UAVa;;AAAA,uBAYZjC,WAAW,CAACY,MAAD,EAAS;AACjCsB,IAAAA,WAAW,CAACC,MAAD,EAAS;AAChBF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAHgC;;AAKjCG,IAAAA,OAAO,CAACC,KAAD,EAAQ;AAEXJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AARgC,GAAT,CAZC;AAAA;AAAA,QAYtBK,MAZsB;;AAuB7B,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAChCT,IAAAA,YAAY,CAACS,OAAO,KAAKd,QAAb,CAAZ;AAEAG,IAAAA,YAAY,CAACW,OAAD,CAAZ;AACH,GAJD;;AAMA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,OAAO,EAAE,CAFb;AAGI,IAAA,SAAS,EAAE,KAHf;AAII,IAAA,OAAO,EAAE,QAJb;AAKI,IAAA,UAAU,EAAE,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACXA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAI,CAACZ,SAAL,EAAgB;AACZ,eAAO,KAAP;AACH;;AAEDQ,MAAAA,MAAM,CAAC;AACHK,QAAAA,SAAS,EAAE;AACPC,UAAAA,UAAU,EAAE1B,SADL;AAEP2B,UAAAA,SAAS,EAAEzB,QAFJ;AAGPI,UAAAA,KAHO;AAIPE,UAAAA;AAJO;AADR,OAAD,CAAN,CAOGoB,KAPH,CAOSL,CAAC,IAAI;AACVM,QAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACH,OATD;AAUH,KAlBL;AAmBI,IAAA,EAAE,EAAE,WAnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAE,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,SAAS,EAAE,KAAhC;AAAuC,IAAA,EAAE,EAAE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,YADX;AAEI,IAAA,KAAK,EAAEvB,SAFX;AAGI,IAAA,QAAQ,EAAGuB,CAAD,IAAO;AACbtB,MAAAA,YAAY,CAACsB,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAZ;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAUI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,WADX;AAEI,IAAA,KAAK,EAAE9B,QAFX;AAGI,IAAA,QAAQ,EAAGqB,CAAD,IAAO;AACbpB,MAAAA,WAAW,CAACoB,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAX;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAVJ,CADJ,CArBJ,CADJ,CAJJ,CADJ,CAPJ,CADJ,CADJ;AAmEH","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {Button, Card, CardContent, CardHeader, FormGroup, Grid, TextField} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\n\nconst useStyles = makeStyles({\n    carContent: {}\n});\n\nexport default function SignUp() {\n    document.title = \"Auth - Sign up\";\n    // setting the states\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [validPass, setValidPass] = useState(true);\n    const [success, setSuccess] = useState(null);\n\n    const [signup] = useMutation(SIGNUP, {\n        onCompleted(result) {\n            setSuccess(true)\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const passwordsMatch = (toMatch) => {\n        setValidPass(toMatch === password);\n\n        setPassword2(toMatch);\n    };\n\n    return (\n        <Fragment>\n            <Grid\n                container\n                spacing={0}\n                direction={\"row\"}\n                justify={\"center\"}\n                alignItems={\"center\"}\n            >\n                <Grid item xs={6}>\n                    <Card>\n                        <CardHeader title={\"Signup\"}>\n\n                        </CardHeader>\n                        <CardContent>\n                            <form\n                                onSubmit={e => {\n                                    e.preventDefault();\n\n                                    if (!validPass) {\n                                        return false;\n                                    }\n\n                                    signup({\n                                        variables: {\n                                            first_name: firstName,\n                                            last_name: lastName,\n                                            email,\n                                            password\n                                        }\n                                    }).catch(e => {\n                                        console.log(e);\n                                    })\n                                }}\n                                id={\"cred-form\"}\n                            >\n                                <Grid container direction={\"column\"}>\n                                    <Grid item container direction={\"row\"} xs={12}>\n                                        <FormControl>\n                                            <TextField\n                                                label={\"First Name\"}\n                                                value={firstName}\n                                                onChange={(e) => {\n                                                    setFirstName(e.target.value)\n                                                }}\n                                            />\n                                        </FormControl>\n                                        <FormControl>\n                                        <TextField\n                                            label={\"Last Name\"}\n                                            value={lastName}\n                                            onChange={(e) => {\n                                                setLastName(e.target.value)\n                                            }}\n                                        />\n                                        </FormControl>\n                                    </Grid>\n\n\n                                </Grid>\n                            </form>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}