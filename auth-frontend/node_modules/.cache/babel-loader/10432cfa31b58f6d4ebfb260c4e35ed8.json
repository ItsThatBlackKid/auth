{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Button, Card, Row, Col, TextInput, Preloader, Collection, CollectionItem } from 'react-materialize';\nimport Grid from \"@material-ui/core/Grid\";\nimport { CardActions, CardContent, CardHeader, TextField } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  textWidth: {\n    '& .MuiFormControl-root': {\n      width: \"100%\"\n    }\n  },\n  cardTitle: {\n    textAlign: \"center\"\n  }\n}));\nconst VERIFY = gql`\n    {\n        verify \n    }\n`;\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n  // setting the states\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        verified = _useState6[0],\n        setVerified = _useState6[1];\n\n  const query = useQueryParam();\n  const redirect = query.get('redirect') || '/';\n  const history = useHistory();\n\n  const _useQuery = useQuery(VERIFY, {\n    onCompleted(verified) {\n      setVerified(verified);\n      window.location.assign(redirect);\n    }\n\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useMutation = useMutation(LOGIN, {\n    onCompleted(result) {\n      setVerified(true);\n      window.location.assign(redirect);\n    },\n\n    onError(error) {\n      setVerified(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        login = _useMutation2[0];\n\n  const pageTitle = React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    className: \"white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Login\")));\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, pageTitle, loading ? React.createElement(Preloader, {\n    active: true,\n    color: \"white\",\n    size: \"big\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.textWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!validPass) {\n        return false;\n      }\n\n      login({\n        variables: {\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardPadding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.cardTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Sign up\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"First name\",\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Last name\",\n    value: lastName,\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    label: \"Email address\",\n    value: email,\n    type: \"email\",\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Password\",\n    value: password,\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Confirm password\",\n    value: password2,\n    type: \"password\",\n    onChange: e => {\n      setPassword2(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), React.createElement(CardActions, {\n    style: {\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    endIcon: React.createElement(PublishIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Submit\")))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js"],"names":["React","Fragment","useState","useEffect","useMutation","useQuery","useHistory","useLocation","gql","Button","Card","Row","Col","TextInput","Preloader","Collection","CollectionItem","Grid","CardActions","CardContent","CardHeader","TextField","Typography","PublishIcon","makeStyles","useStyles","theme","textWidth","width","cardTitle","textAlign","VERIFY","LOGIN","useQueryParam","URLSearchParams","search","Login","email","setEmail","password","setPassword","verified","setVerified","query","redirect","get","history","onCompleted","window","location","assign","loading","error","data","result","onError","login","pageTitle","classes","e","preventDefault","validPass","variables","catch","console","log","cardPadding","firstName","setFirstName","target","value","lastName","setLastName","password2","setPassword2","justifyContent"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/react-hooks\";\nimport {useHistory, useLocation} from 'react-router-dom'\nimport gql from \"graphql-tag\";\nimport {Button, Card, Row, Col, TextInput, Preloader, Collection, CollectionItem} from 'react-materialize'\nimport Grid from \"@material-ui/core/Grid\";\nimport {CardActions, CardContent, CardHeader, TextField} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\n\n    textWidth: {\n        '& .MuiFormControl-root': {\n            width: \"100%\"\n        }\n    },\n\n    cardTitle: {\n        textAlign: \"center\"\n    },\n\n}));\n\nconst VERIFY = gql`\n    {\n        verify \n    }\n`;\n\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n    // setting the states\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [verified, setVerified] = useState(null);\n\n    const query = useQueryParam();\n    const redirect = query.get('redirect') || '/';\n    const history = useHistory();\n\n    const {loading, error, data} = useQuery(VERIFY, {\n        onCompleted(verified) {\n            setVerified(verified);\n            window.location.assign(redirect);\n        }\n    });\n\n\n    const [login] = useMutation(LOGIN, {\n        onCompleted(result) {\n            setVerified(true);\n            window.location.assign(redirect);\n        },\n\n        onError(error) {\n\n            setVerified(false)\n        }\n    });\n\n    const pageTitle =\n        <Row>\n            <Col s={12} className={\"white-text\"}>\n                <h2>Login</h2>\n            </Col>\n        </Row>;\n\n    return (\n        <Fragment>\n            {pageTitle}\n            {loading ? <Preloader active color=\"white\" size=\"big\"/> :\n                <Grid\n                    container\n                    spacing={0}\n                    direction={\"row\"}\n                    justify={\"center\"}\n                    alignItems={\"center\"}\n                    className={classes.textWidth}\n                >\n                    <Grid item xs={4}>\n                        <form\n                            onSubmit={e => {\n                                e.preventDefault();\n\n                                if (!validPass) {\n                                    return false;\n                                }\n\n                                login({\n                                    variables: {\n                                        email,\n                                        password\n                                    }\n                                }).catch(e => {\n                                    console.log(e);\n                                })\n                            }}\n                            id={\"cred-form\"}\n                        >\n                            <Card className={classes.cardPadding}>\n                                <CardHeader\n                                    title={<Typography variant={\"h4\"} className={classes.cardTitle}>Sign up</Typography>}>\n\n                                </CardHeader>\n                                <CardContent>\n\n                                    <Grid item container direction={\"column\"}>\n                                        <Grid item container direction={\"row\"}\n                                              spacing={2}\n                                              xs={12}>\n                                            <Grid item xs={6}>\n                                                <TextField\n                                                    label={\"First name\"}\n                                                    value={firstName}\n                                                    onChange={(e) => {\n                                                        setFirstName(e.target.value)\n                                                    }}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6}>\n                                                <TextField\n                                                    label={\"Last name\"}\n                                                    value={lastName}\n                                                    onChange={(e) => {\n                                                        setLastName(e.target.value)\n                                                    }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n\n                                        <TextField\n                                            label={\"Email address\"}\n                                            value={email}\n                                            type={\"email\"}\n                                            onChange={(e) => {\n                                                setEmail(e.target.value)\n                                            }}\n                                        />\n\n                                        <TextField\n                                            label={\"Password\"}\n                                            value={password}\n                                            type={\"password\"}\n                                            onChange={(e) => {\n                                                setPassword(e.target.value)\n                                            }}/>\n                                        <TextField\n                                            label={\"Confirm password\"}\n                                            value={password2}\n                                            type={\"password\"}\n                                            onChange={(e) => {\n                                                setPassword2(e.target.value)\n                                            }}\n                                        />\n\n                                    </Grid>\n                                </CardContent>\n                                <CardActions style={{justifyContent: \"flex-end\"}}>\n                                    <Button color=\"primary\" variant=\"contained\" endIcon={<PublishIcon/>}>Submit</Button>\n                                </CardActions>\n                            </Card>\n                        </form>\n                    </Grid>\n                </Grid>\n            }\n        </Fragment>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}