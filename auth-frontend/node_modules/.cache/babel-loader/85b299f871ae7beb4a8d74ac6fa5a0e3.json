{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Button, Card, Row, Col, TextInput, Preloader, Collection, CollectionItem } from 'react-materialize';\nconst CHECK_USER = gql`\n    {\n        verify {\n            email\n            first_name\n            last_name\n        }\n    }\n`;\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n  // setting the states\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1];\n\n  const query = useQueryParam();\n  const redirect = query.get('redirect') || '/';\n  const history = useHistory();\n\n  const _useQuery = useQuery(CHECK_USER, {\n    onCompleted(user) {\n      setSuccess(true);\n      window.location.assign(redirect);\n    }\n\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useMutation = useMutation(LOGIN, {\n    onCompleted(result) {\n      setSuccess(true);\n      window.location.assign(redirect);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        login = _useMutation2[0];\n\n  const pageTitle = React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    className: \"white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Login\")));\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, pageTitle, loading ? React.createElement(Preloader, {\n    active: true,\n    color: \"white\",\n    size: \"big\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      login({\n        variables: {\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Email\",\n    email: true,\n    error: \"Invalid email\",\n    validate: true,\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Password\",\n    password: true,\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), success !== null && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: success ? \"green-text darken-3\" : \"red-text darken-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, success ? \"Login success! Redirecting...\" : \"Unable to login with provided credentials\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Submit\"))))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/login.js"],"names":["React","Fragment","useState","useEffect","useMutation","useQuery","useHistory","useLocation","gql","Button","Card","Row","Col","TextInput","Preloader","Collection","CollectionItem","CHECK_USER","LOGIN","useQueryParam","URLSearchParams","search","Login","email","setEmail","password","setPassword","success","setSuccess","query","redirect","get","history","onCompleted","user","window","location","assign","loading","error","data","result","onError","login","pageTitle","e","preventDefault","variables","catch","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/react-hooks\";\nimport {useHistory, useLocation} from 'react-router-dom'\nimport gql from \"graphql-tag\";\nimport {Button, Card, Row, Col, TextInput, Preloader, Collection, CollectionItem} from 'react-materialize'\n\nconst CHECK_USER = gql`\n    {\n        verify {\n            email\n            first_name\n            last_name\n        }\n    }\n`;\n\nconst LOGIN = gql`\n    mutation login($email: String! $password: String!) {\n        login(email: $email, password: $password)\n    }\n`;\n\nconst useQueryParam = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nconst Login = () => {\n    // setting the states\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [success, setSuccess] = useState(null);\n\n    const query = useQueryParam();\n    const redirect = query.get('redirect') || '/';\n    const history = useHistory();\n\n    const {loading, error, data} = useQuery(CHECK_USER, {\n        onCompleted(user) {\n            setSuccess(true);\n            window.location.assign(redirect);\n        }\n    });\n\n\n    const [login] = useMutation(LOGIN, {\n        onCompleted(result) {\n            setSuccess(true);\n            window.location.assign(redirect);\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const pageTitle =\n        <Row>\n            <Col s={12} className={\"white-text\"}>\n                <h2>Login</h2>\n            </Col>\n        </Row>;\n\n    return (\n        <Fragment>\n            {pageTitle}\n            {loading ? <Preloader active color=\"white\" size=\"big\"/> :\n                <div className={\"valign-wrapper\"}>\n                    <Row>\n                        <Col s={12}>\n                            <Card>\n\n                                <form onSubmit={e => {\n                                    e.preventDefault();\n\n                                    login({\n                                        variables: {\n                                            email,\n                                            password\n                                        }\n                                    }).catch(e => {\n                                        console.log(e);\n                                    })\n\n                                }} id={\"cred-form\"}>\n                                    <Row>\n                                        <TextInput s={12} label={\"Email\"} email error={\"Invalid email\"} validate\n                                                   value={email}\n                                                   onChange={(e) => {\n                                                       setEmail(e.target.value);\n                                                   }} required/>\n                                    </Row>\n                                    <Row>\n                                        <TextInput s={12} label={\"Password\"} password value={password}\n                                                   onChange={(e) => {\n                                                       setPassword(e.target.value);\n                                                   }} required/>\n                                    </Row>\n                                    {\n                                        success !== null &&\n                                        <Row>\n                                            <p className={success ? \"green-text darken-3\" : \"red-text darken-red\"}>\n                                                {success ? \"Login success! Redirecting...\" : \"Unable to login with provided credentials\"}\n                                            </p>\n                                        </Row>\n                                    }\n                                    <Row>\n                                        <Button type={\"submit\"}>Submit</Button>\n                                    </Row>\n                                </form>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            }\n        </Fragment>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}