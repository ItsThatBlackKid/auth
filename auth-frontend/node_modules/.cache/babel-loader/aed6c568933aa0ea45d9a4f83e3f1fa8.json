{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { Button, Card, CardActions, CardContent, CardHeader, FormGroup, Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\nconst useStyles = makeStyles({\n  cardPadding: {\n    padding: 5\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  cardTitle: {\n    textAlign: \"center\"\n  }\n});\nexport default function SignUp() {\n  document.title = \"Auth - Sign up\";\n  const classes = useStyles(); // setting the states\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password2 = _useState12[0],\n        setPassword2 = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        validPass = _useState14[0],\n        setValidPass = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        success = _useState16[0],\n        setSuccess = _useState16[1];\n\n  const _useMutation = useMutation(SIGNUP, {\n    onCompleted(result) {\n      setSuccess(true);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        signup = _useMutation2[0];\n\n  const passwordsMatch = toMatch => {\n    setValidPass(toMatch === password);\n    setPassword2(toMatch);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!validPass) {\n        return false;\n      }\n\n      signup({\n        variables: {\n          first_name: firstName,\n          last_name: lastName,\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardPadding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: React.createElement(Typography, {\n      variant: \"h4\",\n      className: classes.cardTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Sign up\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    justify: \"space-evenly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"First name\",\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Last name\",\n    value: lastName,\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    className: classes.fullWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Email address\",\n    value: email,\n    type: \"email\",\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Password\",\n    value: password,\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Confirm password\",\n    value: password2,\n    type: \"password\",\n    onChange: e => {\n      setPassword2(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Submit\"))))))));\n}","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js"],"names":["React","Fragment","useState","useMutation","gql","Button","Card","CardActions","CardContent","CardHeader","FormGroup","Grid","TextField","makeStyles","Typography","FormControl","SIGNUP","useStyles","cardPadding","padding","fullWidth","width","cardTitle","textAlign","SignUp","document","title","classes","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","validPass","setValidPass","success","setSuccess","onCompleted","result","onError","error","signup","passwordsMatch","toMatch","e","preventDefault","variables","first_name","last_name","catch","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {Button, Card, CardActions, CardContent, CardHeader, FormGroup, Grid, TextField} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\n\nconst useStyles = makeStyles({\n    cardPadding: {\n        padding: 5\n    },\n\n    fullWidth: {\n        width: \"100%\"\n    },\n\n    cardTitle: {\n        textAlign: \"center\"\n    }\n});\n\nexport default function SignUp() {\n    document.title = \"Auth - Sign up\";\n    const classes = useStyles();\n    // setting the states\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [validPass, setValidPass] = useState(true);\n    const [success, setSuccess] = useState(null);\n\n    const [signup] = useMutation(SIGNUP, {\n        onCompleted(result) {\n            setSuccess(true)\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const passwordsMatch = (toMatch) => {\n        setValidPass(toMatch === password);\n\n        setPassword2(toMatch);\n    };\n\n    return (\n        <Fragment>\n            <Grid\n                container\n                spacing={0}\n                direction={\"row\"}\n                justify={\"center\"}\n                alignItems={\"center\"}\n            >\n                <Grid item xs={6}>\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault();\n\n                            if (!validPass) {\n                                return false;\n                            }\n\n                            signup({\n                                variables: {\n                                    first_name: firstName,\n                                    last_name: lastName,\n                                    email,\n                                    password\n                                }\n                            }).catch(e => {\n                                console.log(e);\n                            })\n                        }}\n                        id={\"cred-form\"}\n                    >\n                        <Card className={classes.cardPadding}>\n                            <CardHeader\n                                title={<Typography variant={\"h4\"} className={classes.cardTitle}>Sign up</Typography>}>\n\n                            </CardHeader>\n                            <CardContent>\n\n                                <Grid item container direction={\"column\"}>\n                                    <Grid item container direction={\"row\"} xs={12} justify={\"space-evenly\"}>\n                                        <FormControl>\n                                            <TextField\n                                                label={\"First name\"}\n                                                value={firstName}\n                                                onChange={(e) => {\n                                                    setFirstName(e.target.value)\n                                                }}\n                                            />\n                                        </FormControl>\n                                        <FormControl>\n                                            <TextField\n                                                label={\"Last name\"}\n                                                value={lastName}\n                                                onChange={(e) => {\n                                                    setLastName(e.target.value)\n                                                }}\n                                            />\n                                        </FormControl>\n                                    </Grid>\n\n                                    <FormControl className={classes.fullWidth}>\n                                        <TextField\n                                            label={\"Email address\"}\n                                            value={email}\n                                            type={\"email\"}\n                                            onChange={(e) => {\n                                                setEmail(e.target.value)\n                                            }}\n                                        />\n                                    </FormControl>\n\n                                    <FormControl>\n                                        <TextField\n                                            label={\"Password\"}\n                                            value={password}\n                                            type={\"password\"}\n                                            onChange={(e) => {\n                                                setPassword(e.target.value)\n                                            }}/>\n                                    </FormControl>\n                                    <FormControl>\n                                        <TextField\n                                            label={\"Confirm password\"}\n                                            value={password2}\n                                            type={\"password\"}\n                                            onChange={(e) => {\n                                                setPassword2(e.target.value)\n                                            }}\n                                        />\n\n                                    </FormControl>\n                                </Grid>\n                                <CardActions>\n                                    <Button>Submit</Button>\n                                </CardActions>\n\n                            </CardContent>\n                        </Card>\n                    </form>\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}