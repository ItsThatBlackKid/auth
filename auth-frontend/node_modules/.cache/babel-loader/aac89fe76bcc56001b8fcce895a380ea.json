{"ast":null,"code":"import _slicedToArray from \"/home/sheku/WebstormProjects/auth/auth-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { Button, Card, Row, Col, TextInput } from 'react-materialize';\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\nexport default function SignUp() {\n  // setting the states\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstName = _useState2[0],\n        setFirstName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastName = _useState4[0],\n        setLastName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        username = _useState6[0],\n        setUsername = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password2 = _useState12[0],\n        setPassword2 = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        validPass = _useState14[0],\n        setValidPass = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        success = _useState16[0],\n        setSuccess = _useState16[1];\n\n  const _useMutation = useMutation(SIGNUP, {\n    onCompleted(result) {\n      setSuccess(true);\n    },\n\n    onError(error) {\n      setSuccess(false);\n    }\n\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        signup = _useMutation2[0];\n\n  const passwordsMatch = toMatch => {\n    setValidPass(toMatch === password);\n    setPassword2(toMatch);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container center-align\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    className: \"white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sign up\"))), React.createElement(\"div\", {\n    className: \"valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      signup({\n        variables: {\n          first_name: firstName,\n          last_name: lastName,\n          email,\n          password\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    id: \"cred-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 6,\n    label: \"First Name\",\n    value: firstName,\n    onChange: e => {\n      setFirstName(e.target.value);\n    },\n    validate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    s: 6,\n    label: \"Last Name\",\n    value: lastName,\n    onChange: e => {\n      setLastName(e.target.value);\n    },\n    validate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Username\",\n    value: username,\n    onChange: e => {\n      setUsername(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 12,\n    label: \"Email\",\n    email: true,\n    error: \"Invalid email\",\n    validate: true,\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    s: 6,\n    label: \"Password\",\n    password: true,\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    s: 6,\n    label: \"Confirm Password\",\n    password: true,\n    inputClassName: validPass ? \"\" : \"invalid\",\n    error: \"Passwords do not match\",\n    value: password2,\n    onChange: e => {\n      passwordsMatch(e.target.value);\n    },\n    validate: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), success !== null && React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: success ? \"green-text darken-3\" : \"red-text darken-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, success ? \"Account successfully created\" : \"Unable to create account with details provided\")), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Submit\"))))))));\n}","map":{"version":3,"sources":["/home/sheku/WebstormProjects/auth/auth-frontend/src/components/signup.js"],"names":["React","Fragment","useState","useMutation","gql","Button","Card","Row","Col","TextInput","SIGNUP","SignUp","firstName","setFirstName","lastName","setLastName","username","setUsername","email","setEmail","password","setPassword","password2","setPassword2","validPass","setValidPass","success","setSuccess","onCompleted","result","onError","error","signup","passwordsMatch","toMatch","e","preventDefault","variables","first_name","last_name","catch","console","log","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,SAAhC,QAAgD,mBAAhD;AAEA,MAAMC,MAAM,GAAGN,GAAI;;;;CAAnB;AAMA,eAAe,SAASO,MAAT,GAAkB;AAC7B;AAD6B,oBAEKT,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEtBU,SAFsB;AAAA,QAEXC,YAFW;;AAAA,qBAGGX,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,QAGtBY,QAHsB;AAAA,QAGZC,WAHY;;AAAA,qBAIGb,QAAQ,CAAC,EAAD,CAJX;AAAA;AAAA,QAItBc,QAJsB;AAAA,QAIZC,WAJY;;AAAA,qBAKHf,QAAQ,CAAC,EAAD,CALL;AAAA;AAAA,QAKtBgB,KALsB;AAAA,QAKfC,QALe;;AAAA,qBAMGjB,QAAQ,CAAC,EAAD,CANX;AAAA;AAAA,QAMtBkB,QANsB;AAAA,QAMZC,WANY;;AAAA,sBAOKnB,QAAQ,CAAC,EAAD,CAPb;AAAA;AAAA,QAOtBoB,SAPsB;AAAA,QAOXC,YAPW;;AAAA,sBAQKrB,QAAQ,CAAC,IAAD,CARb;AAAA;AAAA,QAQtBsB,SARsB;AAAA,QAQXC,YARW;;AAAA,sBASCvB,QAAQ,CAAC,IAAD,CATT;AAAA;AAAA,QAStBwB,OATsB;AAAA,QASbC,UATa;;AAAA,uBAWZxB,WAAW,CAACO,MAAD,EAAS;AACjCkB,IAAAA,WAAW,CAACC,MAAD,EAAS;AAChBF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAHgC;;AAKjCG,IAAAA,OAAO,CAACC,KAAD,EAAQ;AAEXJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AARgC,GAAT,CAXC;AAAA;AAAA,QAWtBK,MAXsB;;AAsB7B,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAChCT,IAAAA,YAAY,CAACS,OAAO,KAAKd,QAAb,CAAZ;AAEAG,IAAAA,YAAY,CAACW,OAAD,CAAZ;AACH,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAY,IAAA,SAAS,EAAE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AAEAJ,MAAAA,MAAM,CAAC;AACHK,QAAAA,SAAS,EAAE;AACPC,UAAAA,UAAU,EAAE1B,SADL;AAEP2B,UAAAA,SAAS,EAAEzB,QAFJ;AAGPI,UAAAA,KAHO;AAIPE,UAAAA;AAJO;AADR,OAAD,CAAN,CAOGoB,KAPH,CAOSL,CAAC,IAAI;AACVM,QAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACH,OATD;AAUH,KAbD;AAaG,IAAA,EAAE,EAAE,WAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,CAAd;AAAiB,IAAA,KAAK,EAAE,YAAxB;AAAsC,IAAA,KAAK,EAAEvB,SAA7C;AAAwD,IAAA,QAAQ,EAAGuB,CAAD,IAAO;AACrEtB,MAAAA,YAAY,CAACsB,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAZ;AACH,KAFD;AAEG,IAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,CAAd;AAAiB,IAAA,KAAK,EAAE,WAAxB;AAAqC,IAAA,KAAK,EAAE9B,QAA5C;AAAsD,IAAA,QAAQ,EAAGqB,CAAD,IAAO;AACnEpB,MAAAA,WAAW,CAACoB,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAX;AACH,KAFD;AAEG,IAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAdJ,EAsBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,EAAd;AAAkB,IAAA,KAAK,EAAE,UAAzB;AAAqC,IAAA,KAAK,EAAE5B,QAA5C;AAAsD,IAAA,QAAQ,EAAGmB,CAAD,IAAO;AACnElB,MAAAA,WAAW,CAACkB,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAX;AACH,KAFD;AAEG,IAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtBJ,EA2BI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,EAAd;AAAkB,IAAA,KAAK,EAAE,OAAzB;AAAkC,IAAA,KAAK,MAAvC;AAAwC,IAAA,KAAK,EAAE,eAA/C;AAAgE,IAAA,QAAQ,MAAxE;AACW,IAAA,KAAK,EAAE1B,KADlB;AAEW,IAAA,QAAQ,EAAGiB,CAAD,IAAO;AACbhB,MAAAA,QAAQ,CAACgB,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAR;AACH,KAJZ;AAIc,IAAA,QAAQ,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3BJ,EAkCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,CAAd;AAAiB,IAAA,KAAK,EAAE,UAAxB;AAAoC,IAAA,QAAQ,MAA5C;AAA6C,IAAA,KAAK,EAAExB,QAApD;AAA8D,IAAA,QAAQ,EAAGe,CAAD,IAAO;AAC3Ed,MAAAA,WAAW,CAACc,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAX;AACH,KAFD;AAEG,IAAA,QAAQ,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,CAAd;AAAiB,IAAA,KAAK,EAAE,kBAAxB;AAA4C,IAAA,QAAQ,MAApD;AACW,IAAA,cAAc,EAAEpB,SAAS,GAAG,EAAH,GAAQ,SAD5C;AAEW,IAAA,KAAK,EAAE,wBAFlB;AAE4C,IAAA,KAAK,EAAEF,SAFnD;AAE8D,IAAA,QAAQ,EAAGa,CAAD,IAAO;AAC3EF,MAAAA,cAAc,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAd;AACH,KAJD;AAIG,IAAA,QAAQ,MAJX;AAIY,IAAA,QAAQ,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAlCJ,EA6CQlB,OAAO,KAAK,IAAZ,IACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAEA,OAAO,GAAG,qBAAH,GAA2B,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,GAAG,8BAAH,GAAoC,gDADhD,CADJ,CA9CR,EAoDI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CApDJ,CADJ,CADJ,CADJ,CADJ,CANJ,CADJ;AAyEH","sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {Button, Card, Row, Col, TextInput} from 'react-materialize'\n\nconst SIGNUP = gql`\n    mutation signup($first_name: String $last_name: String $email: String! $password: String!) {\n        signup(input: {first_name: $first_name, last_name: $last_name, email: $email, password: $password})\n    }\n`;\n\nexport default function SignUp() {\n    // setting the states\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [validPass, setValidPass] = useState(true);\n    const [success, setSuccess] = useState(null);\n\n    const [signup] = useMutation(SIGNUP, {\n        onCompleted(result) {\n            setSuccess(true)\n        },\n\n        onError(error) {\n\n            setSuccess(false)\n        }\n    });\n\n    const passwordsMatch = (toMatch) => {\n        setValidPass(toMatch === password);\n\n        setPassword2(toMatch);\n    };\n\n    return (\n        <div className={\"container center-align\"}>\n            <Row>\n                <Col s={12} className={\"white-text\"}>\n                    <h2>Sign up</h2>\n                </Col>\n            </Row>\n            <div className={\"valign-wrapper\"}>\n                <Row>\n                    <Col s={12}>\n                        <Card>\n                            <form onSubmit={e => {\n                                e.preventDefault();\n\n                                signup({\n                                    variables: {\n                                        first_name: firstName,\n                                        last_name: lastName,\n                                        email,\n                                        password\n                                    }\n                                }).catch(e => {\n                                    console.log(e);\n                                })\n                            }} id={\"cred-form\"}>\n                                <Row>\n                                    <TextInput s={6} label={\"First Name\"} value={firstName} onChange={(e) => {\n                                        setFirstName(e.target.value);\n                                    }} validate/>\n                                    <TextInput s={6} label={\"Last Name\"} value={lastName} onChange={(e) => {\n                                        setLastName(e.target.value);\n                                    }} validate/>\n                                </Row>\n                                <Row>\n                                    <TextInput s={12} label={\"Username\"} value={username} onChange={(e) => {\n                                        setUsername(e.target.value);\n                                    }} required/>\n                                </Row>\n                                <Row>\n                                    <TextInput s={12} label={\"Email\"} email error={\"Invalid email\"} validate\n                                               value={email}\n                                               onChange={(e) => {\n                                                   setEmail(e.target.value);\n                                               }} required/>\n                                </Row>\n                                <Row>\n                                    <TextInput s={6} label={\"Password\"} password value={password} onChange={(e) => {\n                                        setPassword(e.target.value);\n                                    }} required/>\n                                    <TextInput s={6} label={\"Confirm Password\"} password\n                                               inputClassName={validPass ? \"\" : \"invalid\"}\n                                               error={\"Passwords do not match\"} value={password2} onChange={(e) => {\n                                        passwordsMatch(e.target.value);\n                                    }} validate required/>\n                                </Row>\n                                {\n                                    success !== null &&\n                                    <Row>\n                                        <p className={success ? \"green-text darken-3\" : \"red-text darken-red\"}>\n                                            {success ? \"Account successfully created\" : \"Unable to create account with details provided\"}\n                                        </p>\n                                    </Row>\n                                }\n                                <Row>\n                                    <Button type={\"submit\"}>Submit</Button>\n                                </Row>\n                            </form>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}